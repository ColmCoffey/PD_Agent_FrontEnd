{"ast":null,"code":"var _jsxFileName = \"/Users/kelleyhill/Desktop/NEW_backup2/rag_app_scratch/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\n// Define interfaces for our data structures\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Define the API base URL (adjust if backend runs elsewhere)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [availablePdfs, setAvailablePdfs] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  // Fetch available PDFs on component mount\n  useEffect(() => {\n    const fetchPdfs = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(`${API_BASE_URL}/api/pdf/list`);\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        const data = await res.json();\n        setAvailablePdfs(data.pdfs || []);\n      } catch (e) {\n        console.error(\"Failed to fetch PDFs:\", e);\n        setError(`Failed to load available documents: ${e.message}`);\n        setAvailablePdfs([]); // Clear list on error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPdfs();\n  }, []); // Empty dependency array means run once on mount\n\n  // Handle form submission\n  const handleQuerySubmit = useCallback(async event => {\n    event.preventDefault(); // Prevent default form submission page reload\n    if (!query.trim() || isLoading) {\n      return; // Don't submit empty queries or while loading\n    }\n    setIsLoading(true);\n    setError(null);\n    setResponse(null); // Clear previous response\n\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/literature/query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query\n        }) // Send query in request body\n      });\n      if (!res.ok) {\n        // Try to get error details from response body\n        let errorDetail = `HTTP error! status: ${res.status}`;\n        try {\n          const errorData = await res.json();\n          errorDetail = errorData.detail || errorDetail;\n        } catch {/* Ignore if response body is not JSON */}\n        throw new Error(errorDetail);\n      }\n      const data = await res.json();\n      setResponse(data);\n    } catch (e) {\n      console.error(\"Failed to submit query:\", e);\n      setError(`Error getting answer: ${e.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query, isLoading]); // Dependencies for useCallback\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Parkinson's Literature Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"pdf-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Research Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), isLoading && availablePdfs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading documents...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 65\n        }, this), error && availablePdfs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 61\n        }, this), availablePdfs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: availablePdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: pdf\n          }, pdf, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this) : !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No documents found or failed to load.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"query-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask a Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleQuerySubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 4,\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Enter your question about the literature...\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading || !query.trim(),\n            children: isLoading ? 'Processing...' : 'Submit Query'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), isLoading && !response && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fetching answer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 44\n      }, this), \" \", error && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }, this), \" \", response && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"response-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"answer-text\",\n          children: response.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), response.sources && response.sources.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"sources-list\",\n          children: response.sources.map((src, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"source-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: src.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: src.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No specific sources were cited for this answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"RAG Application v0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"UTY7u11/BuLOSLoIJm2pxHQmpXM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","availablePdfs","setAvailablePdfs","query","setQuery","isLoading","setIsLoading","error","setError","response","setResponse","fetchPdfs","res","fetch","ok","Error","status","data","json","pdfs","e","console","message","handleQuerySubmit","event","preventDefault","trim","method","headers","body","JSON","stringify","errorDetail","errorData","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pdf","onSubmit","rows","value","onChange","target","placeholder","disabled","type","answer","sources","src","index","source","content","_c","$RefreshReg$"],"sources":["/Users/kelleyhill/Desktop/NEW_backup2/rag_app_scratch/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\n// Define interfaces for our data structures\ninterface Source {\n    source: string; // Filename\n    content: string; // Text chunk\n}\n\ninterface QueryResponse {\n    answer: string;\n    sources: Source[];\n}\n\n// Define the API base URL (adjust if backend runs elsewhere)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nfunction App() {\n    const [availablePdfs, setAvailablePdfs] = useState<string[]>([]);\n    const [query, setQuery] = useState<string>('');\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string | null>(null);\n    const [response, setResponse] = useState<QueryResponse | null>(null);\n\n    // Fetch available PDFs on component mount\n    useEffect(() => {\n        const fetchPdfs = async () => {\n            setIsLoading(true);\n            setError(null);\n            try {\n                const res = await fetch(`${API_BASE_URL}/api/pdf/list`);\n                if (!res.ok) {\n                    throw new Error(`HTTP error! status: ${res.status}`);\n                }\n                const data = await res.json();\n                setAvailablePdfs(data.pdfs || []);\n            } catch (e: any) {\n                console.error(\"Failed to fetch PDFs:\", e);\n                setError(`Failed to load available documents: ${e.message}`);\n                setAvailablePdfs([]); // Clear list on error\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchPdfs();\n    }, []); // Empty dependency array means run once on mount\n\n    // Handle form submission\n    const handleQuerySubmit = useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault(); // Prevent default form submission page reload\n        if (!query.trim() || isLoading) {\n            return; // Don't submit empty queries or while loading\n        }\n\n        setIsLoading(true);\n        setError(null);\n        setResponse(null); // Clear previous response\n\n        try {\n            const res = await fetch(`${API_BASE_URL}/api/literature/query`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ query: query }), // Send query in request body\n            });\n\n            if (!res.ok) {\n                // Try to get error details from response body\n                let errorDetail = `HTTP error! status: ${res.status}`;\n                try {\n                    const errorData = await res.json();\n                    errorDetail = errorData.detail || errorDetail;\n                } catch { /* Ignore if response body is not JSON */ }\n                throw new Error(errorDetail);\n            }\n\n            const data: QueryResponse = await res.json();\n            setResponse(data);\n        } catch (e: any) {\n            console.error(\"Failed to submit query:\", e);\n            setError(`Error getting answer: ${e.message}`);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [query, isLoading]); // Dependencies for useCallback\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Parkinson's Literature Query</h1>\n            </header>\n\n            <main className=\"App-main\">\n                <section className=\"pdf-list\">\n                    <h2>Available Research Papers</h2>\n                    {isLoading && availablePdfs.length === 0 && <p>Loading documents...</p>}\n                    {error && availablePdfs.length === 0 && <p className=\"error\">{error}</p>}\n                    {availablePdfs.length > 0 ? (\n                        <ul>\n                            {availablePdfs.map((pdf) => (\n                                <li key={pdf}>{pdf}</li>\n                            ))}\n                        </ul>\n                    ) : (\n                        !isLoading && <p>No documents found or failed to load.</p>\n                    )}\n                </section>\n\n                <section className=\"query-section\">\n                    <h2>Ask a Question</h2>\n                    <form onSubmit={handleQuerySubmit}>\n                        <textarea\n                            rows={4}\n                            value={query}\n                            onChange={(e) => setQuery(e.target.value)}\n                            placeholder=\"Enter your question about the literature...\"\n                            disabled={isLoading}\n                        />\n                        <button type=\"submit\" disabled={isLoading || !query.trim()}>\n                            {isLoading ? 'Processing...' : 'Submit Query'}\n                        </button>\n                    </form>\n                </section>\n\n                {isLoading && !response && <p>Fetching answer...</p>} {/* Show loading only when submitting query */}\n                {error && !isLoading && <p className=\"error\">{error}</p>} {/* Show query errors */}\n\n                {response && (\n                    <section className=\"response-section\">\n                        <h2>Answer</h2>\n                        <p className=\"answer-text\">{response.answer}</p>\n\n                        <h3>Sources</h3>\n                        {response.sources && response.sources.length > 0 ? (\n                            <ul className=\"sources-list\">\n                                {response.sources.map((src, index) => (\n                                    <li key={index} className=\"source-item\">\n                                        <strong>{src.source}</strong>\n                                        <p>{src.content}</p>\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p>No specific sources were cited for this answer.</p>\n                        )}\n                    </section>\n                )}\n            </main>\n\n            <footer className=\"App-footer\">\n                <p>RAG Application v0.1</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}