{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./App.css';// Define interfaces for our data structures\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Define the API base URL (adjust if backend runs elsewhere)\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';function App(){const[availablePdfs,setAvailablePdfs]=useState([]);const[query,setQuery]=useState('');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[response,setResponse]=useState(null);// Fetch available PDFs on component mount\nuseEffect(()=>{const fetchPdfs=async()=>{setIsLoading(true);setError(null);try{const res=await fetch(`${API_BASE_URL}/api/pdf/list`);if(!res.ok){throw new Error(`HTTP error! status: ${res.status}`);}const data=await res.json();setAvailablePdfs(data.pdfs||[]);}catch(e){console.error(\"Failed to fetch PDFs:\",e);setError(`Failed to load available documents: ${e.message}`);setAvailablePdfs([]);// Clear list on error\n}finally{setIsLoading(false);}};fetchPdfs();},[]);// Empty dependency array means run once on mount\n// Handle form submission\nconst handleQuerySubmit=useCallback(async event=>{event.preventDefault();// Prevent default form submission page reload\nif(!query.trim()||isLoading){return;// Don't submit empty queries or while loading\n}setIsLoading(true);setError(null);setResponse(null);// Clear previous response\ntry{const res=await fetch(`${API_BASE_URL}/api/literature/query`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query:query})// Send query in request body\n});if(!res.ok){// Try to get error details from response body\nlet errorDetail=`HTTP error! status: ${res.status}`;try{const errorData=await res.json();errorDetail=errorData.detail||errorDetail;}catch{/* Ignore if response body is not JSON */}throw new Error(errorDetail);}const data=await res.json();setResponse(data);}catch(e){console.error(\"Failed to submit query:\",e);setError(`Error getting answer: ${e.message}`);}finally{setIsLoading(false);}},[query,isLoading]);// Dependencies for useCallback\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Parkinson's Literature Query\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"pdf-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Available Research Papers\"}),isLoading&&availablePdfs.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading documents...\"}),error&&availablePdfs.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),availablePdfs.length>0?/*#__PURE__*/_jsx(\"ul\",{children:availablePdfs.map(pdf=>/*#__PURE__*/_jsx(\"li\",{children:pdf},pdf))}):!isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"No documents found or failed to load.\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"query-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Ask a Question\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleQuerySubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{rows:4,value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Enter your question about the literature...\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||!query.trim(),children:isLoading?'Processing...':'Submit Query'})]})]}),isLoading&&!response&&/*#__PURE__*/_jsx(\"p\",{children:\"Fetching answer...\"}),\" \",error&&!isLoading&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),\" \",response&&/*#__PURE__*/_jsxs(\"section\",{className:\"response-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Answer\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer-text\",children:response.answer}),/*#__PURE__*/_jsx(\"h3\",{children:\"Sources\"}),response.sources&&response.sources.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"sources-list\",children:response.sources.map((src,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:src.source}),/*#__PURE__*/_jsx(\"p\",{children:src.content})]},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No specific sources were cited for this answer.\"})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"RAG Application v0.1\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","App","availablePdfs","setAvailablePdfs","query","setQuery","isLoading","setIsLoading","error","setError","response","setResponse","fetchPdfs","res","fetch","ok","Error","status","data","json","pdfs","e","console","message","handleQuerySubmit","event","preventDefault","trim","method","headers","body","JSON","stringify","errorDetail","errorData","detail","className","children","length","map","pdf","onSubmit","rows","value","onChange","target","placeholder","disabled","type","answer","sources","src","index","source","content"],"sources":["/Users/kelleyhill/Desktop/NEW_backup2/rag_app_scratch/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\n\n// Define interfaces for our data structures\ninterface Source {\n    source: string; // Filename\n    content: string; // Text chunk\n}\n\ninterface QueryResponse {\n    answer: string;\n    sources: Source[];\n}\n\n// Define the API base URL (adjust if backend runs elsewhere)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nfunction App() {\n    const [availablePdfs, setAvailablePdfs] = useState<string[]>([]);\n    const [query, setQuery] = useState<string>('');\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string | null>(null);\n    const [response, setResponse] = useState<QueryResponse | null>(null);\n\n    // Fetch available PDFs on component mount\n    useEffect(() => {\n        const fetchPdfs = async () => {\n            setIsLoading(true);\n            setError(null);\n            try {\n                const res = await fetch(`${API_BASE_URL}/api/pdf/list`);\n                if (!res.ok) {\n                    throw new Error(`HTTP error! status: ${res.status}`);\n                }\n                const data = await res.json();\n                setAvailablePdfs(data.pdfs || []);\n            } catch (e: any) {\n                console.error(\"Failed to fetch PDFs:\", e);\n                setError(`Failed to load available documents: ${e.message}`);\n                setAvailablePdfs([]); // Clear list on error\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchPdfs();\n    }, []); // Empty dependency array means run once on mount\n\n    // Handle form submission\n    const handleQuerySubmit = useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault(); // Prevent default form submission page reload\n        if (!query.trim() || isLoading) {\n            return; // Don't submit empty queries or while loading\n        }\n\n        setIsLoading(true);\n        setError(null);\n        setResponse(null); // Clear previous response\n\n        try {\n            const res = await fetch(`${API_BASE_URL}/api/literature/query`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ query: query }), // Send query in request body\n            });\n\n            if (!res.ok) {\n                // Try to get error details from response body\n                let errorDetail = `HTTP error! status: ${res.status}`;\n                try {\n                    const errorData = await res.json();\n                    errorDetail = errorData.detail || errorDetail;\n                } catch { /* Ignore if response body is not JSON */ }\n                throw new Error(errorDetail);\n            }\n\n            const data: QueryResponse = await res.json();\n            setResponse(data);\n        } catch (e: any) {\n            console.error(\"Failed to submit query:\", e);\n            setError(`Error getting answer: ${e.message}`);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [query, isLoading]); // Dependencies for useCallback\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Parkinson's Literature Query</h1>\n            </header>\n\n            <main className=\"App-main\">\n                <section className=\"pdf-list\">\n                    <h2>Available Research Papers</h2>\n                    {isLoading && availablePdfs.length === 0 && <p>Loading documents...</p>}\n                    {error && availablePdfs.length === 0 && <p className=\"error\">{error}</p>}\n                    {availablePdfs.length > 0 ? (\n                        <ul>\n                            {availablePdfs.map((pdf) => (\n                                <li key={pdf}>{pdf}</li>\n                            ))}\n                        </ul>\n                    ) : (\n                        !isLoading && <p>No documents found or failed to load.</p>\n                    )}\n                </section>\n\n                <section className=\"query-section\">\n                    <h2>Ask a Question</h2>\n                    <form onSubmit={handleQuerySubmit}>\n                        <textarea\n                            rows={4}\n                            value={query}\n                            onChange={(e) => setQuery(e.target.value)}\n                            placeholder=\"Enter your question about the literature...\"\n                            disabled={isLoading}\n                        />\n                        <button type=\"submit\" disabled={isLoading || !query.trim()}>\n                            {isLoading ? 'Processing...' : 'Submit Query'}\n                        </button>\n                    </form>\n                </section>\n\n                {isLoading && !response && <p>Fetching answer...</p>} {/* Show loading only when submitting query */}\n                {error && !isLoading && <p className=\"error\">{error}</p>} {/* Show query errors */}\n\n                {response && (\n                    <section className=\"response-section\">\n                        <h2>Answer</h2>\n                        <p className=\"answer-text\">{response.answer}</p>\n\n                        <h3>Sources</h3>\n                        {response.sources && response.sources.length > 0 ? (\n                            <ul className=\"sources-list\">\n                                {response.sources.map((src, index) => (\n                                    <li key={index} className=\"source-item\">\n                                        <strong>{src.source}</strong>\n                                        <p>{src.content}</p>\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p>No specific sources were cited for this answer.</p>\n                        )}\n                    </section>\n                )}\n            </main>\n\n            <footer className=\"App-footer\">\n                <p>RAG Application v0.1</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}